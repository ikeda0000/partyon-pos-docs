openapi: "3.0.3"
info:
  title: partyon POS API
  version: "1.0"
  description: |-
    This API is used for partyon POS system.
servers:
  - url: HTTPS
tags:
  - name: default
paths:
  /users:
    get:
      tags:
        - default
      summary: Get users list.
      description: "Allow you to get users list."
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: "object"
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    role:
                      type: string
                    password:
                      type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /users/{userId}:
    get:
      tags:
        - default
      summary: Get a user record.
      description: "Allow you to get a user record specified by userId."
      parameters:
        - name: userId
          in: path
          description: "This parameter enables you to specify a user by userId. eventId is 'id' in response of 'GET /users'"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  role:
                    type: string
                  password:
                    type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /menus:
    get:
      tags:
        - default
      summary: Get menus list.
      description: "Allow you to get menus list."
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: "object"
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    value:
                      type: string
                    menu_category:
                      type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /menus/{menuId}:
    get:
      tags:
        - default
      summary: Get a menu record.
      description: "Allow you to get a menu record specified by menuId."
      parameters:
        - name: menuId
          in: path
          description: "This parameter enables you to specify a menu by menuId. eventId is 'id' in response of 'GET /menus'"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  value:
                    type: string
                  menu_category:
                    type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /customers:
    get:
      tags:
        - default
      summary: Get customers list.
      description: "Allow you to get customers list."
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: "object"
                  properties:
                    id:
                      type: integer
                    customer_name:
                      type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /customers/{customerId}:
    get:
      tags:
        - default
      summary: Get a customer record.
      description: "Allow you to get a customer record specified by customerId."
      parameters:
        - name: customerId
          in: path
          description: "This parameter enables you to specify a customer by customerId. eventId is 'id' in response of 'GET /customers'"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id:
                    type: integer
                  customer_name:
                    type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /groups:
    get:
      tags:
        - default
      summary: Get groups list.
      description: "Allow you to get groups list."
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: "object"
                  properties:
                    id:
                      type: integer
                    ordered_by:
                      type: string
                    reserved_by:
                      type: string
                    point_to:
                      type: string
                    male_count:
                      type: integer
                    female_count:
                      type: integer
                    table_list:
                      type: array
                      items:
                        type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
    post:
      tags:
        - default
      summary: Create a group.
      description: ""
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ordered_by:
                  type: string
                reserved_by:
                  type: string
                point_to:
                  type: string
                male_count:
                  type: integer
                female_count:
                  type: integer
                table_list:
                  type: array
                  items:
                    type: object
                    properties:
                      value:
                        type: string
                      label:
                        type: string
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "顧客の登録に成功しました。"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      ordered_by:
                        type: string
                      reserved_by:
                        type: string
                      point_to:
                        type: string
                      male_count:
                        type: integer
                      female_count:
                        type: integer
                      table_list:
                        type: array
                        items:
                          type: string
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /groups/{groupId}:
    get:
      tags:
        - default
      summary: Get a group record.
      description: "Allow you to get the group information specified by groupId."
      parameters:
        - name: groupId
          in: path
          description: "This parameter enables you to specify a group by groupId. eventId is 'id' in response of 'GET /groups'"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id:
                    type: integer
                  ordered_by:
                    type: string
                  reserved_by:
                    type: string
                  point_to:
                    type: string
                  male_count:
                    type: integer
                  female_count:
                    type: integer
                  table_list:
                    type: array
                    items:
                      type: string
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /seats:
    get:
      tags:
        - default
      description: "Get multiple seat information."
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: "object"
                  properties:
                    table_name:
                      type: "string"
                    is_occupied:
                      type: "boolean"
                    subtotal:
                      type: "integer"
                    male_count:
                      type: "integer"
                    female_count:
                      type: "integer"
                  example:
                    table_name: "string"
                    is_occupied: true
                    subtotal: 0
                    male_count: 0
                    female_count: 0
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /seats/{seatId}:
    get:
      tags:
        - default
      description: "Get a single seat information."
      parameters:
        - name: seatId
          in: path
          description: "取得したい座席のID"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  table_name:
                    type: "string"
                  is_occupied:
                    type: "boolean"
                  subtotal:
                    type: "integer"
                  male_count:
                    type: "integer"
                  female_count:
                    type: "integer"
                example:
                  table_name: "string"
                  is_occupied: true
                  subtotal: 0
                  male_count: 0
                  female_count: 0
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /orders:
    get:
      tags:
        - default
      description: "Get multiple order information."
      parameters: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: "object"
                  properties:
                    ordered_at:
                      type: "string"
                    menu:
                      type: "string"
                    menu_category:
                      type: "string"
                    price:
                      type: "integer"
                    order_quantity:
                      type: "integer"
                    served_quantity:
                      type: "integer"
                    subtotal:
                      type: "integer"
                    group_id:
                      type: "integer"
                    table_list:
                      type: array
                    registered_by:
                      type: "string"
                    for_whom:
                      type: "string"
                  example:
                    ordered_at: "string"
                    menu: "string"
                    menu_category: "string"
                    price: 0
                    order_quantity: 0
                    served_quantity: 0
                    subtotal: 0
                    group_id: 0
                    table_list: []
                    registered_by: "string"
                    for_whom: "string"
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
  /orders/{orderId}:
    get:
      tags:
        - default
      summary: Get a order record.
      description: "Get a single order information."
      parameters:
        - name: orderId
          in: path
          description: "取得したい注文のID"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  ordered_at:
                    type: "string"
                  menu:
                    type: "string"
                  menu_category:
                    type: "string"
                  price:
                    type: "integer"
                  order_quantity:
                    type: "integer"
                  served_quantity:
                    type: "integer"
                  subtotal:
                    type: "integer"
                  group_id:
                    type: "integer"
                  table_list:
                    type: array
                  registered_by:
                    type: "string"
                  for_whom:
                    type: "string"
                example:
                  ordered_at: "string"
                  menu: "string"
                  menu_category: "string"
                  price: 0
                  order_quantity: 0
                  served_quantity: 0
                  subtotal: 0
                  group_id: 0
                  table_list: []
                  registered_by: "string"
                  for_whom: "string"
        "403":
          description: Forbidden
        "404":
          description: Not Found
